name: Build frontend

on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.10

      - name: Install Dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  format:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.10

      - name: Install Dependencies
        run: npm ci

      - name: Check Prettier Formatting
        run: npm run format

  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.10

      - name: Install Dependencies
        run: npm ci

      - name: Run Jest Tests
        run: npm run test:ci

  build:
    needs:
      - lint
      - format
      - test
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.10

      - name: Extract project version
        id: version
        run: echo "VERSION=$(jq -r '.version' ./package.json)" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/cotrip-frontend:${{ steps.version.outputs.VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/cotrip-frontend:latest
          build-args: |
            VITE_BACKEND_URL=http://${{ secrets.EC2_IP_ADDRESS }}:8080

      - name: Trigger Deployment
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GH_ACCESS_TOKEN }}" \
            -H "Accept: application/vnd.github.everest-preview+json" \
            https://api.github.com/repos/admy7/cotrip-deployment/dispatches \
            -d '{"event_type": "trigger-deploy"}'
